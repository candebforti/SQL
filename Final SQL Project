#For this final project, I have used the database 'chinook' from: https://www.kaggle.com/code/alaasedeeq/chinook-sql 

#1. How many customers are outside Spanish-speaking countries?
SELECT COUNT(*)
FROM customers
WHERE Country NOT IN ('Argentina', 'Chile', 'Spain')
;

#2. Show customers information who are from Brazil.
SELECT c.FirstName, c.LastName, i.InvoiceID, i.InvoiceDate, i.BillingCountry
FROM chinook.customers c
LEFT JOIN chinook.invoices i
ON c.CustomerID = i.CustomerID
WHERE BillingCountry = 'Brazil'
;

#3. Find unique/distinct list of billing countries from the Invoice table
SELECT DISTINCT BillingCountry
FROM invoices;

#4. Show the Employees who are Sales Agents.
SELECT DISTINCT e.EmployeeID, e.FirstName, e.LastName
FROM chinook.employees e
INNER JOIN chinook.customers c
ON e.EmployeeID = c.SupportRepID;

#5. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT i.InvoiceID, e.LastName, e.FirstName
FROM invoices i
JOIN customers c
ON i.CustomerId = c.CustomerId
JOIN employees e
ON c.SupportRepId = e.EmployeeId
ORDER BY i.InvoiceID;

#6. Show all the cities from where there's been a purchase and from where the customer's are from.
SELECT BillingCity 
FROM invoices
UNION
SELECT City 
FROM customers;

#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT i.total, c.FirstName, c.LastName, c.Country, e.FirstName, e.LastName
FROM invoices i
JOIN customers c
ON i.CustomerId = c.CustomerId
JOIN employees e
ON c.SupportRepId = e.EmployeeId;

#8. How many Invoices were there in 2009?
SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate LIKE '2009%' ;

#9. What are the total sales for 2009?
SELECT SUM(Total)
From invoices
Where InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

#10. Write a query that includes the purchased track name with each invoice line ID.
SELECT t.Name, i.InvoiceId
FROM invoices i
JOIN invoice_items it ON i.InvoiceId = it.InvoiceId
JOIN tracks t ON it.TrackId = t.TrackId ;

#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT  i.InvoiceLineId, t.Name, a.Name
FROM tracks t
RIGHT JOIN invoice_items i ON t.TrackId = i.TrackId
INNER JOIN albums al ON t.AlbumId = al.AlbumId
RIGHT JOIN artists a ON al.ArtistId = a.ArtistId ;

#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM tracks t
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN media_types m ON t.MediaTypeId = m.MediaTypeId
JOIN genres g ON g.GenreId = t.GenreId
;

#13. Show the total sales made by each sales agent.
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) as 'Total Sales'
FROM invoices i
JOIN customers c ON c.CustomerId = i.CustomerId
JOIN employees e ON c.SupportRepId = e.EmployeeId
GROUP BY e.LastName;

#14. Which sales agent made the most dollars in sales in 2009?
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) as 'Total Sales'
FROM invoices i
JOIN customers c ON c.CustomerId = i.CustomerId
JOIN employees e ON c.SupportRepId = e.EmployeeId
WHERE i.InvoiceDate LIKE '2009%'
GROUP BY e.LastName
ORDER BY ROUND(SUM(i.Total), 2) DESC
LIMIT 1;

#15. Write a query that shows if the sales agents have met the required KPIs for sales.
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) as 'Total Sales',
CASE
    WHEN ROUND(SUM(i.Total), 2) > 750.00 THEN 'Met_KPI'
    ELSE 'Below_KPI'
    END AS 'KPI' 
FROM invoices i
JOIN customers c ON c.CustomerId = i.CustomerId
JOIN employees e ON c.SupportRepId = e.EmployeeId
GROUP BY e.LastName
;

#16. Show countries where there have been more than 10 purchases made from
SELECT COUNT(InvoiceId), BillingCountry
FROM invoices
GROUP BY BillingCountry
HAVING COUNT(InvoiceId) > 10
;
